/**
 * FrequentMethods.java
 * @author Miguel Olmedo Camacho - 100072925
 * @version 1.0
 * 19/09/13
 *
 * Implementa una serie de métodos utilizados en diversas clases para evitar la duplicidad de código
 */
package es.uc3m.moc.etiquetar.utilities.general;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;

import com.google.android.youtube.player.internal.ac;

import es.uc3m.moc.etiquetar.LoginActivity;
import es.uc3m.moc.etiquetar.R;
import es.uc3m.moc.etiquetar.utilities.constants.Constants;

public abstract class FrequentMethods {

    /**
     * Comprueba si la URL pertenece a etiquetAR
     * @param URL la URL a verificar
     * @return true en caso de que pertenezca; false en caso de que no sea una URL válida
     */
    public static boolean isValidURL(String URL) {
        return URL.startsWith(Constants.URL_BASE);
    }

    /**
     * Parsea la fecha para mostrarla en un formato adecuado en los comentarios
     * @param originalDate la fecha en su formato original
     * @return un String que contiene la fecha en el formato adecuado para mostrarla
     */
    public static String parseDate(String originalDate) {
        String parserDate;
        String day, month, year;
        String [] allDate = originalDate.split("T");
        String [] onlyDate = allDate[0].split("-");
        year = onlyDate[0];
        month = onlyDate[1];
        day = onlyDate[2];
        parserDate = day + "/" + month + "/" + year + " a las " + allDate[1].substring(0, allDate[1].length() - 1);
        return parserDate;
    }

    public static void onOptiomItemSelected(final Activity activity, int id) {
        switch (id) {
            case R.id.logoutIcon:
                AlertDialog alertDialog;
                AlertDialog.Builder builder = new AlertDialog.Builder(activity).
                        setMessage(activity.getString(R.string.logout)).
                        setPositiveButton(activity.getString(R.string.confirm), new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                Intent launchLoginActivity = new Intent(activity.getApplicationContext(), LoginActivity.class);
                                launchLoginActivity.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                                SharedPreferences.Editor editor = activity.getSharedPreferences(Constants.APP_NAME, activity.MODE_PRIVATE).edit();
                                editor.putBoolean("logged", false);
                                editor.commit();
                                activity.startActivity(launchLoginActivity);
                                activity.finish();
                            }
                        }).
                        setNegativeButton(activity.getString(R.string.cancel), new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        });
                alertDialog = builder.create();
                alertDialog.show();
                break;
            case R.id.helpIcon:
                break;
        }
    }
}
